---
import paint from '/paint.svg'
import avatar from '/images/avatar.webp'
---

<div   class="relative mx-12 flex flex-col items-center justify-center gap-12 xl:flex-row xl:gap-36"
>
    <div class="w-full xl:w-1/2">
        <h1 class="text-3xl mb-5">
            Versatile creator with a flair for <span class="font-extrabold">innovation.</span>
        </h1>
        <div class="relative">
          <svg class="absolute h-full w-full overflow-visible">
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" style={{ stopColor: "#DC3A2B", stopOpacity: 1 }}
                ></stop>
                <stop offset="100%" style={{ stopColor: "#E18510", stopOpacity: 1 }}
                ></stop>
              </linearGradient>
            </defs>
            <path
              id="border-path"
              fill="none"
              stroke="url(#gradient)"
              stroke-width="4"></path>
          </svg>
          <p id="anim-p" class="p-6 text-main">
            Welcome to the captivating realm of <span class="font-bold">Emmanuel Allan</span>, a tech enthusiast whose passion for innovation knows no bounds. Step into the digital domain where cutting-edge technology converges with boundless imagination, and embark on a thrilling exploration of the possibilities that lie within. With a keen eye for detail and a knack for problem-solving, revels in the intricate complexities of the technological landscape. 
            <br/>
            <br/>
            From diving into lines of code to crafting seamless user experiences, every endeavor is an opportunity to push the boundaries of what's possible and leave an indelible mark on the digital frontier. With a deep understanding of the latest trends and a dedication to staying ahead of the curve, I thrives on the challenges that come with shaping the future of technology.
            
          </p>
        </div>
        <div
        class="flex justify-center pt-12 text-center text-main text-content xl:gap-16"
        >
        <div class="w-32">
            <h2>Projects</h2>
            <p id="projects-counter" class="text-xl font-bold">35</p>
        </div>
        <div class="w-32">
            <h2>Skills</h2>
            <p id="skills-counter" class="text-xl font-bold">25</p>
        </div>
        <div class="w-32">
            <h2>Reached</h2>
            <p id="reached-counter" class="text-bold text-xl font-bold">250+</p>
        </div>
        </div>
    </div>
    <div class="relative">
        <img class="h-full w-full md:w-1/2 xl:w-3/4 m-auto" src={avatar} alt="Emmanuel Allan's portrait"/>
        <div id="paint" class="absolute bottom-0 right-0 md:right-20 xl:right-0 translate-y-1/4 md:w-1/2 xl:w-full">
          <img src={paint} alt="paint" />
        </div>
      </div>
</div>

<style>
    #border-path {
      animation: draw 1s forwards 1s ease-out;
    }
  
    @keyframes draw {
      to {
        stroke-dashoffset: 0;
      }
    }
  </style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement
    const path = document.querySelector("#border-path") as SVGPathElement

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
          textMain.offsetHeight / 3
        }`
      )
      const pathLength = path.getTotalLength()

      path.style.strokeDasharray = pathLength.toString()
      path.style.strokeDashoffset = pathLength.toString()
    }
  }

  //Increment
  function incrementCounter(
    selector: string,
    current: number,
    target: number,
    duration: number,
    letter: string = ""
  ) {
    let counter = document.getElementById(selector)
    let stepTime = Math.abs(Math.floor(duration / target))
    if (current < target && counter) {
      current++
      counter.innerText = current.toString() + letter
      setTimeout(
        () => incrementCounter(selector, current, target, duration, letter),
        stepTime
      )
    }
  }
  incrementCounter("projects-counter", 0, 35, 1000,"+")
  incrementCounter("skills-counter", 0, 25, 1000, "+")
  incrementCounter("reached-counter", 0, 150, 1000,"+")

  // Update the path when the page loads
  window.addEventListener("DOMContentLoaded", updatePath)
  // Update the path when the window is resized
  window.addEventListener("resize", updatePath)
</script>